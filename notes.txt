


=>Firebase Phone Authentication
-> for validating your application against phone number on firebase application

    - As we can see below that auth.verifyPhoneNumber() requires various methods;
        - phoneNumber:
        - verificationFailed: a callback function
        - verificationCompleted: a callback function
        - codeSent: a callback function which requires verification and token
        - codeAutoRetrievalTimeout:

      final auth = FirebaseAuth.instance;

      auth.verifyPhoneNumber(
                      phoneNumber: phoneNumberController.text.toString(),
                        verificationCompleted: (_){

                        },
                        verificationFailed: (e){
                          Utils().toastMessage(e.toString());
                        },
                        codeSent: (String verification, int? token){

                        },
                      codeAutoRetrievalTimeout: (e){
                        Utils().toastMessage(e.toString());
                      },
                    );

=>Firebase Realtime Database CRUD Operations

-> Creating and Fetching Realtime Firebase data,
    For Fetching we have 2 methods :
        1. using FirebaseAnimatedList()
        2. using Streambuilder()

    ------------------------------------------------------------

    1. For fetching FirebaseAnimatedList() is used, which comes with the firebase_database package.
    - Add firebase_database package in pubspec.yaml
    - final databaseRef = FirebaseDatabase.instance.ref('Post');  // this will create a document named post
    - Post is like a table, but in Firebase we call it node.
    -

        final databaseRef = FirebaseDatabase.instance.ref('post');

        databaseRef.child(DateTime.now().millisecondsSinceEpoch.toString()).child('Comment').set({  // for nested child
                      'title' : 'hello',
                      'id' : 12
                    }).then((value){
                    }).onError((error, stackTrace) {
                    });

    - used FirebaseAnimatedList() widget to fetch data,
        FirebaseAnimatedList(
                   query: databaseRef,
                   itemBuilder: (context, snapshot, animation, index){
                     return ListTile(
                       title: Text(snapshot.child('title').value.toString()),
                     );
                   },
               )
    - FirebaseAnimatedList() is automatically synced, working as Streambuilder in app
        - UI is automatically updating when there is any change in database.

    ------------------------------------------------------------
    2. Now fetching Realtime data with Streambuilder() instead using FirebaseAnimatedList().



